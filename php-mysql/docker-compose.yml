version: '3.4'

services:
  # PHP Service
  app:
    container_name: 'test-php'
    mem_limit: 512m
    mem_reservation: 128M
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /var/www/html
    volumes:
      - ./app/:/var/www/html
    depends_on:
      - database
    networks:
      - testNetwork

  # Nginx Service
  webserver:
    container_name: 'test-nginx'
    mem_limit: 512m
    mem_reservation: 128M
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "${APP_PORT}:80"
      - "443:443"
    volumes:
      - ./app:/var/www/html
      - .docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - testNetwork

  # DB UI management service
  phpmyadmin:
    container_name: 'test-phpmyadmin'
    mem_limit: 512m
    mem_reservation: 128M
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: database
      PMA_PORT: ${DB_PORT}
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      UPLOAD_LIMIT: 2048M
      MEMORY_LIMIT: 512M
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      - database
    networks:
      - testNetwork

  #MySQL Service
  database:
    container_name: 'test-mysql'
    mem_limit: 512m
    mem_reservation: 128M
    image: mysql:8.0
    restart: unless-stopped
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_TCP_PORT: ${DB_PORT}
    volumes:
      - .docker/data/db:/var/lib/mysql/
    networks:
      - testNetwork

networks:
  testNetwork:
    driver: bridge

volumes:
  database: